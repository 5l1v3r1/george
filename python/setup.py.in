#!/usr/bin/env python

import os
import sys

if "publish" in sys.argv[-1]:
    os.system("python setup.py sdist upload")
    sys.exit()

try:
    from setuptools import setup, Extension
    setup, Extension
except ImportError:
    from distutils.core import setup
    from distutils.extension import Extension
    setup, Extension

import numpy

include_dirs = filter(lambda p: len(p), [
    "${CMAKE_BINARY_DIR}/george",
    numpy.get_include(),
])

library_dirs = filter(lambda p: len(p), map(lambda p: os.path.split(p)[0],
    "${SUITESPARSE_LIBRARIES}".split(";"))) + ["${CMAKE_BINARY_DIR}/lib"]

libraries = ["m"]
if "${AMD_FOUND}" == "TRUE":
    libraries += ["amd"]
if "${CAMD_FOUND}" == "TRUE":
    libraries += ["camd"]
if "${COLAMD_FOUND}" == "TRUE":
    libraries += ["colamd"]
if "${CCOLAMD_FOUND}" == "TRUE":
    libraries += ["ccolamd"]
if "${CHOLMOD_FOUND}" == "TRUE":
    libraries += ["cholmod"]
if "${CHOLMOD_FOUND}" == "TRUE":
    libraries += ["cholmod"]
if "${SUITESPARSEQR_FOUND}" == "TRUE":
    libraries += ["spqr"]
if "${SUITESPARSE_CONFIG_FOUND}" == "TRUE":
    libraries += ["suitesparseconfig"]
if "${METIS_FOUND}" == "TRUE":
    libraries += ["metis"]

libraries += [
    "blas",
    "lapack",
    "lbfgs",
    "george_shared",
]

sources = [
    "${CMAKE_CURRENT_SOURCE_DIR}/george/_george.c",
]

gp_ext = Extension("george._george",
                   sources=sources,
                   library_dirs=library_dirs,
                   libraries=libraries,
                   runtime_library_dirs=library_dirs,
                   include_dirs=include_dirs)

setup(
    name="george",
    version="${GEORGE_VERSION}",
    author="Daniel Foreman-Mackey",
    author_email="danfm@nyu.edu",
    url="https://github.com/dfm/george",
    packages=["george"],
    ext_modules=[gp_ext],
    description="Blazingly fast Gaussian Processes.",
    long_description=open("${CMAKE_CURRENT_SOURCE_DIR}/README.rst").read(),
    package_dir={"": "${CMAKE_CURRENT_SOURCE_DIR}"},
    classifiers=[
        # "Development Status :: 5 - Production/Stable",
        "Intended Audience :: Developers",
        "Intended Audience :: Science/Research",
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
        "Programming Language :: Python",
    ],
)
